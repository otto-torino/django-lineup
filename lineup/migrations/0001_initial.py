# Generated by Django 4.2.23 on 2025-06-26 12:37

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Display name on the website.', max_length=50, verbose_name='label')),
                ('slug', models.SlugField(help_text='Unique identifier for the menu voice.', unique=True, verbose_name='slug')),
                ('link', models.CharField(blank=True, max_length=255, null=True, verbose_name='link')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('order', models.IntegerField(verbose_name='order')),
                ('enabled', models.BooleanField(default=True, verbose_name='enabled')),
                ('login_required', models.BooleanField(default=False, help_text='If this is checked, only logged-in users will be able to view the item.', verbose_name='login required')),
                ('extras', models.CharField(blank=True, help_text='Comma separated list of extra-attributes, e.g.: <code>icon="fa fa-user",data-tooltip="Go home!"</code>', max_length=255, null=True, verbose_name='extras')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='lineup.menuitem', verbose_name='parent')),
                ('permissions', models.ManyToManyField(blank=True, help_text='If empty, the menu item will be publicly visible, otherwise only users with at least one of the selected permissions could see it.', to='auth.permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'Menu item',
                'verbose_name_plural': 'Menu items',
            },
        ),
    ]
